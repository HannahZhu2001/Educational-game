/**
 * @author Jessica Peter
 * @version 4 06.02.17
 * 
 * Time: 15 hours
 */

import java.awt.*;
import java.awt.image.*;
import java.awt.event.*;
import java.io.*;
import javax.imageio.*;
import javax.swing.*;
import javax.swing.Timer.*;
import javax.*;

public class Level2Game
{
  JFrame frame;
  JPanel instructionsPaneGame;
  JPanel flowPane;
  JPanel mainPane;
  ImageIcon box;
  JButton run;
  JLabel boxLabel;
  JLabel instructionsLabel;
  JTextField input1;
  JTextField input2;
  JTextField input3;
  JTextField input4;
  JLabel input5;
  Timer pauseTimer;
  private XtremeXscape xxClass;
  Font questions = new Font ("Serif", Font.BOLD, 40);
  int score;
  
  public Level2Game(JFrame frame, XtremeXscape xxClass)
  {
    this.xxClass = xxClass;
    this.frame = frame;
    instructionsPaneGame= new JPanel ();
    mainPane = new JPanel ();
  //  frame.setSize (1024, 576);
    mainPane.setLayout (new BorderLayout ());
   // frame.setResizable(false);
   // frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);  
  }
  
  /** The secondInstructionsPage2() method displays the second
    * set of instructions for level 2. It tells the user that
    * they have uncovered the location of the second clue, and now
    * must play the game to get the clue.
    */
  public void secondInstructionsPage2()
  {
    instructionsPaneGame.setLayout (null);
    instructionsPaneGame.setBackground(new Color (147, 255, 200));
    instructionsLabel = new JLabel ("<html>You have found the location of the clue! It was in the safe. To uncover the clue, however, you must first complete this game. Answer the following 4 math questions, and then click the Run button. Once you get all 4 questions correct, you will recieve another clue that will help you escape.</html>");
    instructionsLabel.setBounds(25, 120, 984, 300);
    instructionsLabel.setFont (new Font("Serif", Font.BOLD, 30));
    instructionsPaneGame.add (instructionsLabel);
    frame.add(instructionsPaneGame);
    frame.revalidate();
    frame.repaint();
  }
  
  // I added this method.
  public void background()
  {
    Color lightBlue = new Color (135,206,250);
    mainPane.setBackground(lightBlue);
    JLabel q1 = new JLabel ("A. 15 * 3");
    JLabel q2 = new JLabel ("B. 81 / 9");
    JLabel q3 = new JLabel ("C. 76 + 41");
    JLabel q4 = new JLabel ("D. 105 - 24");
    JLabel q5 = new JLabel ();
    
    q1.setVisible(true);
    q1.setFont(questions);
    q1.setBounds(50, 50, 300, 50);
    mainPane.add (q1);
    q2.setFont(questions);
    q2.setBounds(50, 120, 300, 50);
    mainPane.add (q2);
    q3.setFont(questions);
    q3.setBounds(50, 190, 300, 50);
    mainPane.add (q3);
    q4.setFont(questions);
    q4.setBounds(50, 260, 300, 50);
    mainPane.add (q4);
    mainPane.add(q5);
    
    frame.revalidate();
    frame.repaint();
    
    box = new ImageIcon("LockBox.png");
    boxLabel = new JLabel(box)
    {
      public void paintComponent (Graphics g) 
      {
        g.drawImage (box.getImage(), 300, -100,900, 500, null);
        repaint();
      }
    };
    mainPane.add(boxLabel);
    frame.add(mainPane);
    frame.revalidate();
    frame.repaint();
  }
  // I added this method.
  public void input()
  {
    
    Color lightBlue = new Color (135,206,250);
    flowPane = new JPanel ();
    flowPane.setBackground(lightBlue);
    input1 = new JTextField ();
    input2 = new JTextField ();
    input3 = new JTextField ();
    input4 = new JTextField ();
    input5 = new JLabel ("SCORE GOES HERE");
    
    JLabel letter1 = new JLabel("A");
    JLabel letter2 = new JLabel("B");
    JLabel letter3 = new JLabel("C");
    JLabel letter4 = new JLabel("D");
    JLabel letter5 = new JLabel();
    
    run = new JButton("Run");
    run.setFont (new Font ("Serif", Font.PLAIN, 20));
    
    letter1.setBounds(135, 410, 30,50);
    mainPane.add (letter1);
    letter1.setFont(questions);
    letter2.setBounds(289, 410, 30, 50);
    mainPane.add (letter2);
    letter2.setFont(questions);
    letter3.setBounds(440, 410, 30, 50);
    mainPane.add (letter3);
    letter3.setFont(questions);
    letter4.setBounds(595, 410, 30, 50);
    mainPane.add (letter4);
    letter4.setFont(questions);
    mainPane.add(letter5);
    flowPane.setLayout(new FlowLayout());
    
    input1.setPreferredSize(new Dimension(150,50));
    input2.setPreferredSize(new Dimension(150,50));
    input3.setPreferredSize(new Dimension(150,50));
    input4.setPreferredSize(new Dimension(150,50));
        input5.setForeground (lightBlue);
        
    flowPane.add (input1);
    flowPane.add (input2);
    flowPane.add (input3);
    flowPane.add (input4);
    
    JPanel borderPane = new JPanel ();
    borderPane.setLayout (new BorderLayout());
    borderPane.add (flowPane, BorderLayout.SOUTH);
    borderPane.setBackground(lightBlue);
    mainPane.add(borderPane);
    
    frame.revalidate();
    frame.repaint();
    score = 0;
    
    run.addActionListener(new ActionListener() 
                            { 
      public void actionPerformed(ActionEvent ae) 
      {
        input1.setEnabled(false);
    input2.setEnabled(false);
    input3.setEnabled(false);
    input4.setEnabled(false);
    run.setEnabled(false);
        if (input1.getText().equals("45"))
        {
          input1.setBackground(Color.GREEN);
          score += 50;
        }
        else
        {
          input1.setBackground(Color.RED);
        }
        if (input2.getText().equals("9"))
        {
          input2.setBackground(Color.GREEN);
          score += 50;
        }
        else
        {
          input2.setBackground(Color.RED);
        }
        if (input3.getText().equals("117"))
        {
          input3.setBackground(Color.GREEN);
          score += 50;
        }
        else
        {
          input3.setBackground(Color.RED);
        }
        if (input4.getText().equals("81"))
        {
          input4.setBackground(Color.GREEN);
          score += 50;
        }
        else
        {
          input4.setBackground(Color.RED);     
        }
        Font scoreFont = new Font("Plantagenet Cherokee", Font.BOLD, 20); // make global
        JLabel scoreLabel = new JLabel ("Score: " + score);
        flowPane.remove(input5);
        flowPane.add(scoreLabel);
        scoreLabel.setFont(scoreFont);
        pauseTimer = new Timer (1, new ActionListener()
                           {
      public void actionPerformed (ActionEvent ae)
      {
        pauseTimer.stop();
        try
        {
        Thread.sleep(1500);
        }
        catch (InterruptedException e)
        {
        }
         frame.remove (mainPane);
         frame.revalidate();
         frame.repaint();
         xxClass.afterLevel();
      }
        });
        pauseTimer.start();
      }
      
        
    });
    flowPane.add(run);
        flowPane.add (input5);
    run.setPreferredSize(new Dimension(150,50));
    frame.revalidate();
    frame.repaint();

  }
  
  
  public int getScore()
  {
    return score;
  }
  
  // I added this method.
  public void executeGame()
  {
    JButton close = new JButton ("Close");
    secondInstructionsPage2();
    instructionsPaneGame.add(close);
    close.setBounds (380, 400, 154, 50);
    close.addActionListener (new ActionListener ()
                               {
      public void actionPerformed (ActionEvent ae)
      {
        frame.remove(instructionsPaneGame);
        frame.revalidate();
        frame.repaint();
        background();
        input();
      }
    });
  }
  
//  public static void main (String[] args)
//  {
//    JFrame frame = new JFrame();
//    Level2Game g = new Level2Game(frame);
//    g.executeGame();
//    g.executeGame();
//  }
}
